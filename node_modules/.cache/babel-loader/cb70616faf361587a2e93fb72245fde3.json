{"ast":null,"code":"var _jsxFileName = \"/home/rasmitha/Downloads/open-react-template-master/src/components/elements/Login.js\";\nimport React, { Component } from 'react';\nimport '../../assets/scss/core/sections/app.css';\nimport styles from '../../assets/scss/core/sections/app.scss';\nimport '../../assets/scss/core/sections/_font.scss';\nimport '../../assets/scss/core/sections/_reset.scss';\nimport '../../assets/scss/core/sections/_variable.scss';\nimport classNames from 'classnames'; //import '../../assets/scss/core/sections/fonts'\n\nimport _ from 'lodash';\nimport { isEmail } from '../../helpers/email';\nimport { createUser, login } from '../../helpers/user';\nimport { Link } from 'react-router-dom';\nexport default class LoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      message: null,\n      isLogin: true,\n      user: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n      },\n      error: {\n        name: null,\n        email: null,\n        password: null,\n        confirmPassword: null\n      }\n    };\n    this._onSubmit = this._onSubmit.bind(this);\n    this._onTextFieldChange = this._onTextFieldChange.bind(this);\n    this._formValidation = this._formValidation.bind(this);\n  }\n\n  _formValidation(fieldsToValidate = [], callback = () => {}) {\n    const {\n      isLogin,\n      user\n    } = this.state;\n    const allFields = {\n      name: {\n        message: \"Your name is required.\",\n        doValidate: () => {\n          const value = _.trim(_.get(user, 'name', \"\"));\n\n          if (value.length > 0) {\n            return true;\n          }\n\n          return false;\n        }\n      },\n      email: {\n        message: \"Email is not correct\",\n        doValidate: () => {\n          const value = _.get(user, 'email', '');\n\n          if (value.length > 0 && isEmail(value)) {\n            return true;\n          }\n\n          return false;\n        }\n      },\n      password: {\n        message: \"Password shoud has more than 3 characters.\",\n        doValidate: () => {\n          const value = _.get(user, 'password', '');\n\n          if (value && value.length > 3) {\n            return true;\n          }\n\n          return false;\n        }\n      },\n      confirmPassword: {\n        message: \"Password does not match.\",\n        doValidate: () => {\n          const passwordValue = _.get(user, 'password');\n\n          const value = _.get(user, 'confirmPassword', '');\n\n          if (passwordValue === value) {\n            return true;\n          }\n\n          return false;\n        }\n      }\n    };\n    let errors = this.state.error;\n\n    _.each(fieldsToValidate, field => {\n      const fieldValidate = _.get(allFields, field);\n\n      if (fieldValidate) {\n        errors[field] = null;\n        const isFieldValid = fieldValidate.doValidate();\n\n        if (isFieldValid === false) {\n          errors[field] = _.get(fieldValidate, 'message');\n        }\n      }\n    });\n\n    this.setState({\n      error: errors\n    }, () => {\n      console.log(\"After processed validation the form errors\", errors);\n      let isValid = true;\n\n      _.each(errors, err => {\n        if (err) {\n          isValid = false;\n        }\n      });\n\n      callback(isValid);\n    });\n  }\n\n  _onSubmit(event) {\n    const {\n      isLogin,\n      user\n    } = this.state;\n    event.preventDefault();\n    let fieldNeedToValidate = ['email', 'password'];\n\n    if (!isLogin) {\n      fieldNeedToValidate = ['name', 'email', 'password', 'confirmPassword'];\n    }\n\n    this._formValidation(fieldNeedToValidate, isValid => {\n      console.log(\"The form is validated? \", isValid);\n\n      if (isValid) {\n        // send request to backend\n        if (isLogin) {\n          // do send data for login endpoint\n          login(this.state.user.email, this.state.user.password).then(response => {\n            /// login success\n            console.log(\"Hey i got data after login post\", response);\n\n            if (response.data.status == 'Login Success') {\n              this.setState({\n                message: {\n                  type: 'success',\n                  message: 'Login successful.'\n                }\n              });\n              this.props.history.push('/map-page');\n            } else {\n              this.setState({\n                message: {\n                  type: 'failure',\n                  message: 'Please enter valid username and password.'\n                }\n              });\n            }\n          }).catch(err => {\n            // login not success.\n            this.setState({\n              message: {\n                type: 'error',\n                message: 'An error login!'\n              }\n            });\n            console.log(err);\n          });\n        } else {\n          createUser(this.state.user).then(response => {\n            console.log(\"Hey i got data after send post\", response);\n          });\n        }\n      } //console.log(\"FOrm is submitted as: \", isLogin  ? \"Login\" : \"Register\", 'data:', user);\n\n    });\n  }\n\n  _onTextFieldChange(e) {\n    let {\n      user\n    } = this.state;\n    const fieldName = e.target.name;\n    const fieldValue = e.target.value;\n    user[fieldName] = fieldValue;\n    this.setState({\n      user: user\n    });\n  }\n\n  render() {\n    const {\n      isLogin,\n      user,\n      error,\n      message\n    } = this.state;\n    const title = isLogin ? 'Sign In' : 'Sign Up';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-login-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.app - login - form - inner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: \"handleClose\",\n      className: \"app-dismiss-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 8\n      }\n    }, \"Close\")), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"form-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 8\n      }\n    }, title), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this._onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 8\n      }\n    }, message ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: message.type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }\n    }, message.message)) : null, !isLogin ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('app-form-item', {\n        'error': _.get(error, 'name')\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 12\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: user.name,\n      onChange: this._onTextFieldChange,\n      placeholder: \"Your name\",\n      id: \"name-id\",\n      type: \"text\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 12\n      }\n    }))) : null, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('app-form-item', {\n        'error': _.get(error, 'email')\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 10\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: user.email,\n      onChange: this._onTextFieldChange,\n      placeholder: \"Your email address\",\n      id: \"email-id\",\n      type: \"email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 10\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('app-form-item', {\n        'error': _.get(error, 'password')\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 10\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: user.password,\n      onChange: this._onTextFieldChange,\n      placeholder: \"Your password\",\n      id: \"password-id\",\n      type: \"password\",\n      name: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 10\n      }\n    })), !isLogin ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classNames('app-form-item', {\n        'error': _.get(error, 'confirmPassword')\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"confirm-password-id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      value: user.confirmPassword,\n      onChange: this._onTextFieldChange,\n      placeholder: \"Confirm password\",\n      id: \"confirm-password-id\",\n      type: \"password\",\n      name: \"confirmPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 13\n      }\n    }))) : null, isLogin ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-form-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"app-button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-form-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 12\n      }\n    }, \"Don't have an account ? \", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.setState({\n          isLogin: false\n        });\n      },\n      className: \"app-button app-button-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 41\n      }\n    }, \"Sign Up\")))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-form-actions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"app-button primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 11\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app-form-description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 12\n      }\n    }, \"Have an account ? \", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => {\n        this.setState({\n          isLogin: true\n        });\n      },\n      className: \"app-button app-button-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 35\n      }\n    }, \"Sign In\")))))));\n  }\n\n}","map":{"version":3,"sources":["/home/rasmitha/Downloads/open-react-template-master/src/components/elements/Login.js"],"names":["React","Component","styles","classNames","_","isEmail","createUser","login","Link","LoginForm","constructor","props","state","message","isLogin","user","name","email","password","confirmPassword","error","_onSubmit","bind","_onTextFieldChange","_formValidation","fieldsToValidate","callback","allFields","doValidate","value","trim","get","length","passwordValue","errors","each","field","fieldValidate","isFieldValid","setState","console","log","isValid","err","event","preventDefault","fieldNeedToValidate","then","response","data","status","type","history","push","catch","e","fieldName","target","fieldValue","render","title","app","form","inner"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport '../../assets/scss/core/sections/app.css'\nimport styles from '../../assets/scss/core/sections/app.scss'\nimport '../../assets/scss/core/sections/_font.scss'\nimport '../../assets/scss/core/sections/_reset.scss'\nimport '../../assets/scss/core/sections/_variable.scss'\nimport classNames from 'classnames';\n//import '../../assets/scss/core/sections/fonts'\n\nimport _ from 'lodash';\nimport {isEmail} from '../../helpers/email';\nimport {createUser, login} from '../../helpers/user';\nimport { Link } from 'react-router-dom';\n\nexport default class LoginForm extends Component{\n\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmessage: null,\n\t\t\tisLogin: true,\n\t\t\tuser: {\n\t\t\t\tname: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tpassword: \"\",\n\t\t\t\tconfirmPassword: \"\"\n\t\t\t},\n\n\t\t\terror: {\n\t\t\t\tname: null,\n\t\t\t\temail: null,\n\t\t\t\tpassword: null,\n\t\t\t\tconfirmPassword: null,\n\t\t\t}\n\t\t}\n\n\n\t\tthis._onSubmit = this._onSubmit.bind(this)\n\t\tthis._onTextFieldChange = this._onTextFieldChange.bind(this);\n\t\tthis._formValidation = this._formValidation.bind(this)\n\t}\n\n\t_formValidation(fieldsToValidate = [], callback = () => {}){\n\t\tconst {isLogin, user} = this.state;\n\n\t\tconst allFields = {\n\n\t\t\tname: {\n\t\t\t\tmessage: \"Your name is required.\",\n\t\t\t\tdoValidate: () => {\n\t\t\t\t\tconst value = _.trim(_.get(user, 'name', \"\"));\n\n\t\t\t\t\n\t\t\t\t\tif(value.length > 0){\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\temail: {\n\t\t\t\tmessage: \"Email is not correct\",\n\t\t\t\tdoValidate: () => {\n\n\t\t\t\t\tconst value = _.get(user, 'email', '');\n\n\t\t\t\t\tif(value.length >0 && isEmail(value)){\n\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tpassword: {\n\t\t\t\tmessage: \"Password shoud has more than 3 characters.\",\n\t\t\t\tdoValidate: () => {\n\n\n\t\t\t\t\tconst value = _.get(user, 'password', '');\n\n\n\t\t\t\t\tif(value && value.length > 3){\n\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tconfirmPassword: {\n\t\t\t\tmessage: \"Password does not match.\",\n\t\t\t\tdoValidate: () => {\n\n\n\t\t\t\t\tconst passwordValue = _.get(user, 'password');\n\t\t\t\t\tconst value = _.get(user, 'confirmPassword', '');\n\n\n\t\t\t\t\tif(passwordValue === value){\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\n\n\t\tlet errors = this.state.error;\n\n\t\t_.each(fieldsToValidate, (field) => {\n\n\t\t\t\tconst fieldValidate = _.get(allFields, field);\n\t\t\t\tif(fieldValidate){\n\n\t\t\t\t\terrors[field] = null;\n\n\t\t\t\t\tconst isFieldValid = fieldValidate.doValidate();\n\n\t\t\t\t\tif(isFieldValid === false){\n\t\t\t\t\t\terrors[field] = _.get(fieldValidate, 'message');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t});\n\n\n\n\t\tthis.setState({\n\t\t\terror: errors,\n\t\t}, () => {\n\t\t\n\t\t\tconsole.log(\"After processed validation the form errors\", errors);\n\n\t\t\tlet isValid = true;\n\n\t\t\t_.each(errors, (err) => {\n\n\t\t\t\tif(err){\n\t\t\t\t\tisValid = false;\n\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcallback(isValid);\n\n\t\t})\n\n\t\t\n\n\t}\n\t_onSubmit(event){\n\n\t\tconst {isLogin,user} = this.state; \n\t\tevent.preventDefault();\n\n\n\t\tlet fieldNeedToValidate = ['email', 'password'];\n\n\t\tif(!isLogin){\n\n\t\t\tfieldNeedToValidate = ['name', 'email', 'password', 'confirmPassword'];\n\t\t}\n\n\n\t\tthis._formValidation(fieldNeedToValidate,(isValid) => {\n\n\n\t\t\t\tconsole.log(\"The form is validated? \", isValid);\n\n\n\t\t\t\tif(isValid){\n\n\t\t\t\t\t// send request to backend\n\t\t\t\t\tif(isLogin){\n\t\t\t\t\t\t// do send data for login endpoint\n\n\t\t\t\t\t\tlogin(this.state.user.email, this.state.user.password).then((response) => {\n\n\t\t\t\t\t\t\t/// login success\n\n\t\t\t\n\t\t\t\t\t\t\tconsole.log(\"Hey i got data after login post\", response);\n\t\t\t\t\t\t\tif(response.data.status == 'Login Success'){\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t\t\t\tmessage: 'Login successful.'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tthis.props.history.push('/map-page')\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\t\t\ttype: 'failure',\n\t\t\t\t\t\t\t\t\t\tmessage: 'Please enter valid username and password.'\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}).catch((err) => {\n\n\n\t\t\t\t\t\t\t// login not success.\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tmessage: {\n\t\t\t\t\t\t\t\t\ttype: 'error',\n\t\t\t\t\t\t\t\t\tmessage: 'An error login!'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\t})\n\n\n\t\t\t\t\t}else{\n\n\t\t\t\t\t\tcreateUser(this.state.user).then((response) => {\n\n\t\t\t\t\t\t\tconsole.log(\"Hey i got data after send post\", response);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\t\n\n\t\t\t\t}\n\t\t\t\t//console.log(\"FOrm is submitted as: \", isLogin  ? \"Login\" : \"Register\", 'data:', user);\n\n\t\t});\n\n\t\t\n\t}\n\n\t_onTextFieldChange(e){\n\n\t\tlet {user} = this.state;\n\n\n\t\tconst fieldName = e.target.name;\n\t\tconst fieldValue = e.target.value;\n\n\n\t\tuser[fieldName] = fieldValue;\n\n\t\tthis.setState({user: user});\n\n\n\n\t}\n\trender(){\n\n\t\tconst {isLogin, user, error,message} = this.state;\n\n\t\tconst title = isLogin ? 'Sign In' : 'Sign Up'\n\t\treturn (\n\t\t\t\t<div className=\"app-login-form\">\n\n\t\t\t\t\t<div className={styles.app-login-form-inner}>\n\t\t\t\t\t\t\t<Link to = \"/\">\n\t\t\t\t\t\t\t<button onClick=\"handleClose\" className=\"app-dismiss-button\">Close</button></Link>\n\t\t\t\t\t\t\t<h2 className=\"form-title\">{title}</h2>\n\t\t\t\t\t\t\t<form onSubmit={this._onSubmit}>\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tmessage ? <div className=\"app-message\">\n\t\t\t\t\t\t\t\t\t\t<p className={message.type}>{message.message}</p>\n\t\t\t\t\t\t\t\t\t</div>: null\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t!isLogin ? <div>\n\t\t\t\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\t\t\t\t<div className={classNames('app-form-item', {'error': _.get(error, 'name')})}>\n\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"name-id\">Name</label>\n\t\t\t\t\t\t\t\t\t\t\t<input value={user.name} onChange={this._onTextFieldChange} placeholder=\"Your name\" id=\"name-id\" type=\"text\" name=\"name\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>: null\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t<div className={classNames('app-form-item', {'error': _.get(error, 'email')})}>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"email-id\">Email</label>\n\t\t\t\t\t\t\t\t\t<input value={user.email} onChange={this._onTextFieldChange} placeholder=\"Your email address\" id=\"email-id\" type=\"email\" name=\"email\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={classNames('app-form-item', {'error': _.get(error, 'password')})}>\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"password-id\">Password</label>\n\t\t\t\t\t\t\t\t\t<input value={user.password} onChange={this._onTextFieldChange} placeholder=\"Your password\" id=\"password-id\" type=\"password\" name=\"password\" />\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t!isLogin ? <div>\n\n\t\t\t\t\t\t\t\t\t\t\t<div className={classNames('app-form-item', {'error': _.get(error, 'confirmPassword')})}>\n\t\t\t\t\t\t\t\t\t\t\t\t<label htmlFor=\"confirm-password-id\">Confirm Password</label>\n\t\t\t\t\t\t\t\t\t\t\t\t<input value={user.confirmPassword} onChange={this._onTextFieldChange} placeholder=\"Confirm password\" id=\"confirm-password-id\" type=\"password\" name=\"confirmPassword\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>: null\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tisLogin ? <div className=\"app-form-actions\">\n\t\t\t\t\t\t\t\t\t\t<button className=\"app-button primary\">Sign In</button>\n\t\t\t\t\t\t\t\t\t\t<div className=\"app-form-description\">\n\t\t\t\t\t\t\t\t\t\t\t<div>Don't have an account ? <button type=\"button\" onClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({isLogin: false});\n\t\t\t\t\t\t\t\t\t\t\t}} className=\"app-button app-button-link\">Sign Up</button></div>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div> : <div className=\"app-form-actions\">\n\t\t\t\t\t\t\t\t\t\t<button className=\"app-button primary\">Sign Up</button>\n\t\t\t\t\t\t\t\t\t\t<div className=\"app-form-description\">\n\t\t\t\t\t\t\t\t\t\t\t<div>Have an account ? <button type=\"button\" onClick={() => {\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({isLogin: true});\n\n\t\t\t\t\t\t\t\t\t\t\t}} className=\"app-button app-button-link\">Sign In</button></div>\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)\n\t}\n\n}"]},"metadata":{},"sourceType":"module"}